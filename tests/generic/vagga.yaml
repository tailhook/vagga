containers:
  text:
    setup:
    - !Alpine v3.4
    - !Text
      /etc/shakespeare: |
          Sir, in my heart there was a kind of fighting
          That would not let me sleep.

  moretext:
    setup:
    - !Alpine v3.4
    - !Text
      /etc/shakespeare: |
          Sir, in my heart there was a kind of fighting
          That would not let me sleep.
    volumes:
      /etc: !Snapshot

  snapshot-check-mode:
    setup:
    - !Alpine v3.4
    - !Sh |
        adduser -u 1000 -h /home/hemingway -D hemingway
        chmod -R 0700 /home/hemingway
    - !Text
      /home/hemingway/quote.txt: |
          The best way to find out
          if you can trust somebody is to trust them.
    volumes:
      /home/hemingway: !Snapshot

  snapshot-container:
    setup:
    - !Alpine v3.4
    volumes:
      /etc: !Snapshot { container: text }

  tmpfs-subdirs:
    setup:
    - !Alpine v3.4
    volumes:
      /tmp: !Tmpfs
        subdirs:
          x:
          y: { mode: 0o700 }

  snoop_shakespeare:
    setup:
    - !Alpine v3.4
    - !EnsureDir /mnt
    volumes:
      /mnt: !Container text

  cache_dirs:
    setup:
    - !Alpine v3.4
    - !CacheDirs /var/cache: var-cache

  ensure_dir:
    setup:
    - !Alpine v3.4
    - !EnsureDir /var/lib/mount_point
    - !EnsureDir /var/lib/mount_point/subdir
    volumes:
      /var/lib/mount_point: !BindRW /vagga/root/tmp

  remove:
    setup:
    - !Alpine v3.4
    - !Sh |
        mkdir /opt
        touch /opt/test_file
        mkdir /opt/test_dir
        touch /opt/test_dir/file
        ln -s /opt/test_dir /opt/test_symlink
    - !Remove /opt/test_file
    - !Remove /opt/test_dir
    - !Remove /opt/test_symlink

  data-container-alpine:
    setup:
    - !Alpine v3.4
    - !Text
      /var/local/hello.txt: Hello world!
    - !Sh ln -s /var/local/hello.txt /var/local/bye.txt
    data-dirs: [/etc, /var/lib, /var/lib/apk, /var/local/hello.txt]

  data-container-ubuntu:
    setup:
    - !Ubuntu focal
    - !Text
      /var/local/hello.txt: Hello world!
    - !Sh ln -s /var/local/hello.txt /var/local/bye.txt
    data-dirs: [/etc, /var/lib, /var/lib/apt, /var/local/hello.txt]

  busybox:
    setup:
    - !Alpine v3.4

  printenv:
    setup:
    - !Alpine v3.4
    - !Sh env

  unzip-local:
    setup:
    - !Alpine v3.4
    - !EnsureDir /root/test/1/dir
    - !Text
      /root/test/1/dir/file.txt: Hello world!
    - !Unzip
      url: ./test-file.zip
      path: /root/test/1
    - !Unzip
      url: ./test-file.zip
      path: /root/test/2
      subdir: .
    - !Unzip
      url: ./test-file.zip
      path: /root/test/3
      sha256: 0d52400621e3b75a1ce3f791427a42a60d1f9ecad9c539950dfd14a3888f3a14
    - !Unzip
      url: ./test-file.zip
      path: /root/test/4
      subdir: dir
    - !Unzip
      url: ./test-file.zip
      path: /root/test/5
      subdir: dir/

  unzip-downloaded:
    setup:
    - !Alpine v3.4
    - !Unzip
      url: http://files.zerogw.com/test-files/test-file.zip
      path: /root/test
      sha256: 0d52400621e3b75a1ce3f791427a42a60d1f9ecad9c539950dfd14a3888f3a14

  unzip-no-subdir:
    setup:
    - !Alpine v3.4
    - !Unzip
      url: ./test-file.zip
      path: /root/test/
      subdir: ./dir

  unzip-mismatch-hashsum:
    setup:
    - !Alpine v3.4
    - !Unzip
      url: ./test-file.zip
      path: /root/test/
      sha256: 12345678

  vagga:
    setup:
    # Download file to workdir specifically
    - !Download
      url: http://files.zerogw.com/vagga/vagga-0.4.0.tar.xz
      path: /work/vagga-0.4.0.tar.xz
    # To test unpacking local archives
    - !Tar
      url: ./vagga-0.4.0.tar.xz
      subdir: vagga
      path: /usr/lib/vagga

  download-broken-file:
    setup:
    - !Download
      url: http://files.zerogw.com/vagga/vagga-0.4.0.tar.xz
      path: /work/vagga-0.4.0.tar.xz
      sha256: 0000000000000000000000000000000000000000000000000000000000000000

  tar-no-intermediate-dir:
    setup:
    - !Tar
      url: ./tmp.tar.gz
      path: /opt

  sys-dirs:
    setup:
    - !Tar
      url: ./tmp.tar.gz

  build-sys-dirs:
    setup:
    - !Alpine v3.4
    - !Sh |
        mount

  run-as:
    setup:
    - !Alpine v3.4
    - !RunAs
      user-id: 1
      group-id: 1
      script: |
        echo "uid=$(id -u) gid=$(id -g)" > /tmp/ids-11
    - !RunAs
      user-id: 1
      work-dir: /tmp
      script: |
        echo "uid=$(id -u) gid=$(id -g)" > ids-10
    - !RunAs
      group-id: 1
      work-dir: /tmp
      script: |
        echo "uid=$(id -u) gid=$(id -g)" > ids-01
    - !RunAs
      user-id: 1
      group-id: 1
      external-user-id: 0
      script: |
        echo "uid=$(id -u) gid=$(id -g)" > /tmp/ids-110
    - !RunAs
      supplementary-gids: [501, 502]
      script: |
        echo "groups=$(groups)" > /var/groups
    - !RunAs
      script: |
        echo "uid=$(id -u) gid=$(id -g)" > /tmp/ids-00
    - !Sh |
        cp -a /tmp/ids-* /

  isolated-run-as:
    setup:
    - !Alpine v3.4
    - !RunAs
      isolate-network: true
      script: |
        ip addr add 127.254.254.254/8 dev lo
        ip link > /var/ip-link-isolated.out
        ip addr > /var/ip-addr-isolated.out
    - !Sh |
        ip addr > /var/ip-addr.out

  isolated-run-as-with-external-uid:
    setup:
    - !Alpine v3.4
    - !RunAs
      user-id: 1
      external-user-id: 0
      isolate-network: true
      script: |
        ip link > /var/ip-link-isolated.out

  path-precedence:
    setup:
    - !Alpine v3.4
    - !Text
      /usr/bin/hello: |
          #!/bin/sh
          echo "Goodbye world!"
      /usr/local/bin/hello: |
          #!/bin/sh
          echo "Hello world!"
    - !Sh |
        chmod +x /usr/bin/hello
        chmod +x /usr/local/bin/hello

  environ:
    environ-file: /work/environ.txt
    environ:
      EDITOR: vi
      SHELL: /bin/bash
    setup:
    - !Alpine v3.4

  resolv-conf-and-hosts:
    resolv-conf-path: /state/resolv.conf
    hosts-file-path: /state/hosts
    volumes:
      /state: !Tmpfs
    setup:
    - !Alpine v3.6
    - !EnsureDir /state
    - !Sh |
        ln -sfn /state/resolv.conf /etc/resolv.conf
        ln -sfn /state/hosts /etc/hosts

  bash:
    setup:
    - !Alpine v3.7
    - !Install [bash]
    default-shell: [/bin/bash, -c, $cmdline, "--"]

commands:
  two-lines: !Supervise
    mode: wait-all-successful
    children:
      second-line: !Command
        container: busybox
        run: |
          echo world
      first-line: !Command
        container: busybox
        run: |
          echo hello

  args: !Supervise
    description: Test of arg parsing
    mode: wait-all-successful
    options: |
      Usage: vagga args [options]

      Options:
        -F, --first <txt>  First process' text
        --second <txt>     Second process' text
    children:
      second-line: !Command
        container: busybox
        run: |
          echo $VAGGAOPT_FIRST
      first-line: !Command
        container: busybox
        run: |
          echo $VAGGAOPT_SECOND

  cmdargs: !Command
    description: Test of arg parsing
    container: busybox
    options: |
      Usage: vagga cmdargs [options]

      Options:
        -v, --verbose ...  Increase pseudo-verbosity
    run: |
      echo Args: "$@"
      echo Verbosity: "$VAGGAOPT_VERBOSE"

  tagged: !Supervise
    mode: wait-all-successful
    children:
      first: !Command
        container: busybox
        tags: [first_and_second, first_and_third]
        run: |
          echo hello
      second: !Command
        container: busybox
        tags: [first_and_second]
        run: |
          echo world
      third: !Command
        container: busybox
        tags: [first_and_third, third_only]
        run: |
          echo ":)"

  one-kills-another: !Supervise
    options: |
      Usage: vagga one-kills-another [options]

      Options:
        --exit-code <code>  First process exit code
    children:
      dying: !Command
        container: busybox
        volumes:
          /srv: !Persistent fail-fast
        run: |
          echo hello
          echo world
          while [ ! -f /srv/hanging.child ]; do
            sleep 0.1
          done
          rm -f /srv/hanging.child
          exit ${VAGGAOPT_EXIT_CODE:-0}
      hanging: !Command
        container: busybox
        volumes:
          /srv: !Persistent fail-fast
        run: |
          echo ":)"
          touch /srv/hanging.child
          sleep 60
          echo ":("

  isolated-command: !Command
    container: busybox
    isolate-network: true
    run: |
      ip link

  isolated-supervise: !Supervise
    isolate-network: true
    children:
      ip-link: !Command
        container: busybox
        run: |
          ip link

  not-isolated-supervise: !Supervise
    children:
      ip-link: !Command
        container: busybox
        run: |
          ip link

  vagga: !Command
    container: vagga
    run: ["/usr/lib/vagga/vagga"]

  snoop: !Command
    container: snoop_shakespeare
    run: ["cat", "/mnt/etc/shakespeare"]

  replace-shake: !Command
    container: moretext
    run: |
      echo 'nope' > /etc/shakespeare
      cat /etc/shakespeare

  override-volumes: &override !Command
    container: moretext
    volumes:
      /etc: !BindRW /work/etc
    run: |
      echo 'yeah' > /etc/shakespeare
      cat /etc/shakespeare

  override-volumes-supervise: !Supervise
    children:
      override: *override

  hello: !Command
    container: busybox
    run: [echo, -n, hello]

  world: !Command
    container: busybox
    run: "echo world!"

  fake-user: !Command
    user-id: 1
    external-user-id: 0
    container: busybox
    run: [id]

  which-editor: !Command
    container: environ
    environ:
      EDITOR: vim
    run: echo $EDITOR

  check-remount-options: !Command
    container: snapshot-check-mode
    volumes:
      /home/hemingway: !BindRO /work/home
      /var/cache: !Empty
    run: |
      touch /home/hemingway/quote.txt

  bash-shell: !Command
    container: bash
    run: |
      printf "%q" '"hello"'
